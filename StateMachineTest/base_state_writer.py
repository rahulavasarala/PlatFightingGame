import json

#What states are gonna be in the base state machine????

#I think, dash, crouch, walk, run, jumpsquat, sky, idle are good base states to put in the state machine

# I have the option of making a full state machine string parser, but that would be kind of slow

idle_state = {"end_frame" : 12, "property_list" : ["xspeed", "yspeed"], "properties" : {"xspeed" : [[0,0,12]], "yspeed" : [[0,0,12]]},"cancel_list" : [[["up","mod1"],[[1,11]]], '''continue this for more inputs '''], "default_link" : "idle"}

#Do i want to put all of the abstract cancel events in the button accordion, or do I want to have the button accordion keep track of raw events and have code
#to generate the more abstract cancel events,
#have pointers to the raw inputs 

#Have a drift mode for the states
#pair that with drift handling code in the beginning of tick

#so have a button accordion for the player

#also have a cancel event dict for the player, some basic ones pointing to the button accordion, and others generated by code loop at the beggining

#Decide what are the cancel events
#-we have plain up, down, same_dir, different_dir, mod1(for soft movement)
#cool I finalized all of the cancel events for v1, 

#now i make the controls with the button accordion

#make some code that custom builds the cancel events at the beginning

#Makes some code that custom handles the drift

#and then wala---- just need to get javascript to understand the json and access it.




# state = {}

# state["properties"] = [("xspeed",1), ("yspeed", 2)]
# state['cancel_list'] = [('up',[[1,7]]), ('down',[[11,19]])]



state_machine = {}

state_machine['idle'] = idle_state
# state_machine['run'] = state

with open('firstsm.json', 'w') as chicken:

    json.dump(state_machine, chicken)

#Json.parse is javascripts equivalent json understanding tool

